version: "3.8"

services:
  frontend: 
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - ${ANTIMATTER_WEB_PORT}:3000
    env_file:
      - .env
    environment:
      - NEXTAUTH_URL=${ANTIMATTER_URL}
      - NEXT_PUBLIC_ANTIMATTER_API_URL=${ANTIMATTER_API_URL}
    depends_on:
      - backend

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - ${ANTIMATTER_API_PORT}:${ANTIMATTER_API_PORT}
    env_file:
      - .env
    depends_on:
      - database

  database:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    volumes:
      - "antimatter_database:/data/db"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'database-1:27017',priority:1},{_id:1,host:'database-2:27018',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 10s
      start_period: 30s

  database-replica:
      image: mongo:latest
      command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
      ports:
        - 27018:27018
      volumes:
        - "antimatter_database_replica:/data/db"

volumes:
  antimatter_database:
  antimatter_database_replica:

